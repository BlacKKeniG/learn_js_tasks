//1
Какое последнее значение выведет этот код? Почему?
let i = 3;

while (i) {
  alert( i-- );
}

//2
Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.
Оба цикла выводят alert с одинаковыми значениями или нет?

let i = 0;
while (++i < 5) alert( i ); // 1, 2, 3, 4;

let i = 0;
while (i++ < 5) alert( i ); // 1, 2, 3, 4, 5;

//3
Для каждого цикла запишите, какие значения он выведет. Потом сравните с ответом.
Оба цикла выведут alert с одинаковыми значениями или нет?

for (let i = 0; i < 5; i++) alert( i ); // 0, 1, 2, 3, 4

for (let i = 0; i < 5; ++i) alert( i ); // 0, 1, 2, 3, 4

//4
Перепишите код, заменив цикл for на while, без изменения поведения цикла.

for (let i = 0; i < 3; i++) {
  alert( `number ${i}!` );
}

let i = 0;
while (i < 3) {
  alert( `number ${i}!` );
  i++;
}

//5
Напишите цикл, который предлагает prompt ввести число, большее 100. Если посетитель ввёл другое число – попросить ввести ещё раз, и так далее.

Цикл должен спрашивать число пока либо посетитель не введёт число, большее 100, либо не нажмёт кнопку Отмена (ESC).

Предполагается, что посетитель вводит только числа. Предусматривать обработку нечисловых строк в этой задаче необязательно.

let iputNum;

do {

    iputNum = prompt("Введите число больше 100?", "");

} while(num <= 100 && num);

//7
Натуральное число, большее 1, называется простым, если оно ни на что не делится, кроме себя и 1.

Другими словами, n > 1 – простое, если при его делении на любое число кроме 1 и n есть остаток.

Например, 5 это простое число, оно не может быть разделено без остатка на 2, 3 и 4.

Напишите код, который выводит все простые числа из интервала от 2 до n.

Для n = 10 результат должен быть 2,3,5,7.

P.S. Код также должен легко модифицироваться для любых других интервалов.

 let num = 10;
        const seive = [];

        for(let i = 2; i <= num; ++i) {
            if(!seive[i]) {
               alert(i);
                for(let j = i * i; j <= num; j += i) {
                    seive[j] = true;
                }
            }
        }
    </script>